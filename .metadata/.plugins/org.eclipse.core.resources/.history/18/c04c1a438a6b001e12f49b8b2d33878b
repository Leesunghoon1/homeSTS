package com.ezen.myproject.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.ezen.myproject.domain.BoardVO;
import com.ezen.myproject.service.BoardService;

import lombok.extern.slf4j.Slf4j;

@Controller
@RequestMapping("/board/*") //메핑
@Slf4j
public class BoardController {
	
	@Inject
	private BoardService bsv;
	
	@GetMapping("/register")
	public String boardRehisterGet() {
		return "/board/register";
	}
	
	@PostMapping("/register")
	public String regitser(BoardVO bvo) {
		log.info(">>>>>레지스터>>>"+bvo.toString());
		int isOK = bsv.register(bvo);
		log.info(">>> board register >>>" +(isOK>0? "ok" : "fail"));
		return "redirect:/board/list";
	}
	
	@GetMapping("/list")
	public String list(Model model, BoardVO bvo) {
		
		List<BoardVO> list = bsv.getPageList(bvo);
		log.info("리스트>>>>>" + list);
		model.addAttribute("list", list);
		return "/board/list";
	}
	
	@GetMapping("/detail")
	public void detail(Model model, @RequestParam("bno")int bno) {
		//Model model: 이 매개변수는 컨트롤러에서 뷰로 데이터를 전달할 때 사용됩니다. 
		//컨트롤러에서 처리한 데이터를 이 모델 객체에 추가하고, 뷰 페이지로 전달합니다.
		//@RequestParam("bno") int bno: 이 매개변수는 URL에서 "bno"라는 파라미터 값을 추출합니다. 
		//@RequestParam 어노테이션은 요청 파라미터를 메소드의 매개변수로 주입하는 데 사용됩니다. 
		//이 코드에서는 "bno" 파라미터를 추출하고 int 형식으로 변환하여 bno 변수에 저장합니다. 이 변수는 게시판 글의 고유 번호를 나타냅니다.
		
		log.info(">> detail bno >> " + bno);
		
		BoardVO bvo = bsv.getDetail(bno);
		//내생각 보드 bvo를 bsv.getDetail(게시판 번호) 를 같이 보낸다 ?
		
		//이 코드는 bsv라는 BoardService의 getDetail 메서드를 호출하여 bno라는 게시판 글의 고유 번호에 해당하는 상세 정보를 가져옵니다. 
		//bvo 변수는 Board 클래스의 객체를 저장하는데, 이 객체에 게시판 글의 상세 정보가 저장될 것입니다.
		
		model.addAttribute("bvo", bvo);
		// bvo 객체를 모델을 통해서 보낸다
		//: 이 부분은 model 객체를 사용하여 뷰로 데이터를 전달하는 코드입니다. 
		
	}
	
	@PostMapping("/modify")
	public String detail(BoardVO bvo, RedirectAttributes reAttr) {
		//이 매개변수는 리다이렉트 시에 데이터를 전달하는 데 사용됩니다. 수정이 성공했는지 또는 실패했는지의 정보를 전달할 때 사용됩니다.
		log.info("수정 확인 1" + bvo);
		int isOK = bsv.modify(bvo);
		//이 코드는 bsv 객체를 사용하여 게시판 글을 수정하는 메소드를 호출합니다. 
		//bvo 객체에 저장된 정보를 사용하여 글을 수정하고, 수정이 성공했는지를 나타내는 isOK 변수에 결과를 저장합니다.
		log.info(">>> 보드 수정 >>" +(isOK > 0 ? "ok" : "fail"));
		return "redirect:/board/detail?bno="+bvo.getBno();
		//마지막으로, 수정이 완료되면 수정된 게시판 글의 상세 정보 페이지로 리다이렉트합니다. 
		//bno 값은 수정된 글의 고유 번호이며, 수정 후에도 해당 글의 상세 정보를 볼 수 있도록 하기 위해 URL에 포함됩니다.
				
	}
	
	
	
}
